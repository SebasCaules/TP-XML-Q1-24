(:~ xquery version "3.1";

declare namespace ns="http://feed.elasticstats.com/schema/nascar/standings-v2.0.xsd";

declare variable $drivers_list := doc("drivers_list.xml")//driver;
declare variable $drivers_standings := doc("drivers_standings.xml")//ns:driver;

let $year := distinct-values($drivers_standings/@year)
let $serie_type := $drivers_standings/../@name

return
  <nascar_data xsi:noNamespaceSchemaLocation="nascar_data.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <year>{$year}</year>
    <serie_type>{$serie_type}</serie_type>
    <drivers>
      {
        for $driver in $drivers_list
        let $driver_standings := $drivers_standings[@full_name = $driver/@full_name]
        return
          if ($driver_standings) then
            <driver>
              <full_name>{ $driver/@full_name }</full_name>
              <country>{ $driver/@country }</country>
              <birth_date>{ $driver/@birthday }</birth_date>
              <birth_place>{ $driver/@birth_place }</birth_place>
              {
                if ($driver/car) then
                  <car>{ $driver/car/manufacturer/@name }</car>
                else (),
                <rank>{$driver_standings/@rank}</rank>,
                <statistics>
                  <season_points>{$driver_standings/@points}</season_points>
                  <wins>{$driver_standings/@wins}</wins>
                  <poles>{$driver_standings/@poles}</poles>
                  <races_not_finished>{$driver_standings/@dnf}</races_not_finished>
                  <laps_completed>{$driver_standings/@laps_completed}</laps_completed>
                </statistics>
              }
            </driver>
          else ()
      }
    </drivers>
  </nascar_data> ~:)

(:~ xquery version "3.1";

declare namespace ns1 = "http://feed.elasticstats.com/schema/nascar/series-v2.0.xsd";
declare namespace ns2 = "http://feed.elasticstats.com/schema/nascar/standings-v2.0.xsd";

declare function local:parseDriver($driver) as element(driver) {
    <driver>
        <full_name>{data($driver/@full_name)}</full_name>
        <country>{data($driver/@country)}</country>
        <birth_date>{data($driver/@birthday)}</birth_date>
        <birth_place>{data($driver/@birth_place)}</birth_place>
        <rank>{data($driver/@rank)}</rank>
        <car>{data($driver/@number)}</car>
        <statistics>
            <season_points>{data($driver/@points)}</season_points>
            <wins>{data($driver/@wins)}</wins>
            <poles>{data($driver/@poles)}</poles>
            <races_not_finished>{data($driver/@dnf)}</races_not_finished>
            <laps_completed>{data($driver/@laps_completed)}</laps_completed>
        </statistics>
    </driver>
};

let $nascar_data := <nascar_data/>
let $series := doc("ruta_al_primer_archivo.xml")//ns1:series
let $standings := doc("ruta_al_segundo_archivo.xml")//ns2:series

return
    <nascar_data>
        <year>{data($series/@year)}</year>
        <serie_type>{data($series/@name)}</serie_type>
        <drivers>
            {
                for $driver in $standings//ns2:driver
                return local:parseDriver($driver)
            }
        </drivers>
    </nascar_data>
 ~:)



 xquery version "3.1";

declare variable $drivers_list as document-node() external;
declare variable $drivers_standings as document-node() external;

<nascar_data>
  <year>{data($drivers_standings//season/@year)}</year>
  <serie_type>{data($drivers_standings//series/@name)}</serie_type>
  <drivers>
  {
    for $driver in $drivers_standings//driver
    let $details := $drivers_list//driver[@id = $driver/@id]
    return
      <driver>
        <full_name>{data($details/@full_name)}</full_name>
        <country>{data($details/@country)}</country>
        <birth_date>{data($details/@birthday)}</birth_date>
        <birth_place>{data($details/@birth_place)}</birth_place>
        <rank>{data($driver/@rank)}</rank>
        { if ($details/car) then <car>{data($details/car/manufacturer/@name)}</car> else () }
        <statistics>
          <season_points>{data($driver/@points)}</season_points>
          <wins>{data($driver/@wins)}</wins>
          <poles>{data($driver/@poles)}</poles>
          <races_not_finished>{data($driver/@dnf)}</races_not_finished>
          <laps_completed>{data($driver/@laps_completed)}</laps_completed>
        </statistics>
      </driver>
  }
  </drivers>
</nascar_data>